:PROPERTIES:
:Author: alexanderwales
:Score: 8
:DateUnix: 1445017716.0
:DateShort: 2015-Oct-16
:END:

I work in consulting, so I've had a lot of managers, which means a fair amount of exposure to /bad/ managers. You tend to get problems like this when you have managers that don't understand code. The manager needs to have some way of measuring progress, so he has to latch onto /something/ in order to make sure that progress is being made. There are a lot of easy numerical things in programming which aren't representative of actually making the program do what's in the business requirements.

So some idiot manager gets it into his head that programmers produce code, which can be measured in lines. This is true, but it's not too helpful. Because the idiot manager thinks that lines of code are the /one true way/ of measuring progress, he doesn't understand that sometimes /removing/ lines of code can /also/ be progress. Which is sort of like someone thinking that lowering word count is the opposite of progress when writing a book instead of a crucial part of editing. The real problem with the idiot manager, aside from his idiot method of measuring progress, is that even if you explain what you did and why it was good, he basically just has to trust that you're right about what you did and why, since he has no way of checking it himself.

So yes, it's insane, but the idiot manager doesn't know enough to know that it's insane. It just looks perfectly reasonable to him, because all he can look at are the metrics.