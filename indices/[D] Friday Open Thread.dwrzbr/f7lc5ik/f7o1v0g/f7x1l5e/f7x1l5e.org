:PROPERTIES:
:Author: No-Ok-Association
:Score: 8
:DateUnix: 1574043817.0
:DateShort: 2019-Nov-18
:END:

I have no strong opinion on implementing “a” link bot (though I'm happy to write one. Conflict of interest disclaimer: I've privately offered to write a bot that links to the wiki). I strongly oppose implementing lightwaver's bot in any manner. To clarify, I don't mean implementing the bot under someone's “political” control, I mean I don't want lightwaver's bot's codebase used as the framework for our subreddit's bot in any manner. I further propose that a pinned thread be created and used to discuss the features the subreddit wants in a bot, or if we even want a bot, and after that discussion has come to a conclusion we should then open dialogue between people interested in implementing the bot. I've laid out and numbered my reasoning below, with the main bodies of my arguments above and a collection of tl;dr at the bottom.

1. Due to the unilateral and undiscussed implementation of the lightwaver bot we failed to consider using such projects. We should have a pinned discussion on the desired features of the bot, and then once we have a general consensus, have a discussion by domain experts (programmers etc.) on how best to implement it. I feel the choice to roll a completely custom bot system instead of using existing frameworks was premature, in part due to a lack of discussion on the topic beforehand, and that as a result we have therefore failed to thoroughly consider alternatives that may be easier and more valuable in the long run, and we should step back from the recent events and start over and try to do this the right way instead of trying to recover from a seriously flawed start. There is a reason most "real-world" software projects begin with a design phase, and it's because finding issues in the design of the software is much cheaper and easier to fix than trying to build the software with no description and then tack on features. ([[https://www.quora.com/Is-there-an-equivalent-to-a-blueprint-when-it-comes-to-programming][relevant quora on software design]])
2. Firstly, for example, [[https://github.com/tusing/reddit-ffn-bot/wiki/Usage][linkffn]] was mentioned multiple times in the discussion of "what should we put in a custom bot" as far as I'm aware in the discussion, and though I haven't looked hard at the licensing on it yet, it's already up on Github as a ready-to-use bot with installation and operating instructions. The only modifications I assume would be needed to get it running on this subreddit and meet most requests are to modify the fuzzy search to search the wiki titles instead of fanfic sites, and perhaps modify a few strings to “brand” the bot for [[/r/rational][r/rational]] and prevent it from triggering elsewhere. I feel that backing off and having a pinned thread for perhaps a week for a long discussion on the features we need in a bot, and only then discussing whether to write a new bot or to repurpose an existing codebase, would be the best way to accomplish our goal of implementing a bot with our desired features.
3. The bot lightwaver is designing seems to be written by someone with little knowledge of the domain. This isn't intended to be an insult, it's simply an observation. While reading lightwaver's postings about the bot to understand exactly what is being considered for implementation on our subreddit, I came across a recent comment and question in a bot development subreddit that concerns me. To paraphrase, a question on how the bot could avoid posting multiple times in the same thread. This should be “free” (very, very minimal / no extra work required) in almost any “designed to industry standards” framework, which means that the framework lightwaver is developing is not something architected in a way most people would be able to immediately pick up and transfer domain experience to when maintaining or improving it. This was further confirmed when lightwaver stated the solution they decided on was to have a separate text file for each thread UUID and keep track of postings there. Having a folder full of hundreds of text files, one for each thread, is not under any interpretation an “industry acceptable” way to track and maintain the behavior of the bot, and more importantly should never have been considered as a design for a production database. A “pre-coded” third party database system of some sort should be used instead of self-designing some system for storing data in and parsing text files, as the database system has been written and tested by people focused on that chunk alone and the text file solution is a horrific solution that will cause problems (for reasons I won't explain in this post but am happy to dive deeper into if someone wants).
4. (I will preface this by saying I am trying my best to avoid starting an argument about recent events and I will happily remove this section if a moderator feels the chance of this starting another argument will outweigh the value I feel it adds to the discussion on this specific reasoning.)I feel very comfortable assuming many people here have had their model of lightwaver's goals, models, and “acceptable methods” significantly and somewhat permanently altered regardless of the “validity” of the updates and therefore will be understandably upset if lightwaver is seen as retaining anything that could be viewed as a degree of control over any part of the subreddit; therefore, lightwaver should not be involved in any way, shape, or form with this bot. I don't suggest this because “it is guaranteed lightwaver will abuse this” but rather because “some people believe lightwaver might abuse this based on recent behavior, and the drama that would be generated by any association in conjunction with these concerns outweighs any benefit of keeping lightwaver involved in the design, implementation, or maintenance of the system regardless of the true likelihood or possibility of the association being abused”. In my thoughts, that exclusion would include the backend or any components that go into the bot (and I would similarly request lightwaver publicly provide source code under an MIT license or the like and not just build artifacts if their bot is implemented by the moderators to prevent drama over that, for example).
5. Finally, I was looking at lightwaver's described implementation and read something which brought up a huge red flag. I maximally oppose having the bot link to lightwaver's personal subreddit wiki, for various reasons but mainly for #4. I understand that this could likely be easily changed with a few lines in lightwaver's codebase but it's something I wanted to bring up explicitly in case this wasn't already discussed privately by moderators.
6. Finally finally, I understand the new account may draw some suspicion but I hope that saying “I don't want my main account to be connected to this controversy or get involved in arguments with people that follow me out of this thread” will be accepted as the simplest explanation.
7. EDIT: Thinking on it, I came to the conclusion that I should make it clear here that after initially posting this I've privately offered to write a bot that links to the wiki, or to one that meets community requirements as determined by a pinned discussion. I claim that this is not the primary reason I'm not eager to see lightwaver's bot implemented, though you have no reason to trust me, and I won't argue with any claims of conflict of interest. All I'll say is even though it would be in my best interest not to, I feel the ethical decision is obviously to disclose this.

In short

1. The subreddit did not have a chance to go through a proper implementation process for a bot. We should have had a pinned thread for the desired features of a bot, and we also should have put together a team to implement the bot in the best way possible. Recent events caused us to skip that process, but it is an important one and we should not allow recent events to hamstring the deployment of an ideal bot as designed by a proper process. Instead I propose we start over from where we should have started to begin with.
2. Code to do everything people have requested from the bot [[https://github.com/tusing/reddit-ffn-bot/wiki/Usage][already exists]] in production as visible source on github (and they may be amenable to opening it) with much higher quality and years of battle-testing, with simple and minimal changes required to get it running on our subreddit.
3. The choice to custom-design a text parsing system and filesystem-based database instead of the industry-standard of using a prewritten and battle-tested database engine concerns me with regards to the code and design quality of the rest of the bot.
4. lightwaver should be completely removed from this project preemptively to avoid a chance of the community being further damaged by unneeded drama. Again given the events recently, I don't feel this is something I need to explain my reasoning on, but I am happy to do so.
5. All bot components and databases should belong to this community's subreddit
6. Alt is to disassociate any drama from my main account.
7. I've offered to write a bot to replace lightwaver's.

Conflict of interest disclaimer: I've privately offered to write a bot that links to the wiki.