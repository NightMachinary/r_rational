:PROPERTIES:
:Author: jalapeno_dude
:Score: 4
:DateUnix: 1402964865.0
:DateShort: 2014-Jun-17
:END:

I liked it! Greg Egan had [[http://subterraneanpress.com/magazine/winter_2014/bit_players_by_greg_egan][a similar idea]], which IMHO means you're doing something right.

I think what you have here functions perfectly well as a one-shot, and could be released as such without much work (certainly the closing lines work fine). If you want to continue it, though, I think you need to do some more work. How does the story continue from here? Either Beckham breaks out of the simulation quickly, or he doesn't.

-If he does, then you need to do much more to establish the broader upload culture. The basics given here work fine for a story of this length, but if Beckham is moving out into the Overmind we'll need more info. Now you don't get to lean on Star Trek canon. And the Overmind-style story has already been done really well before, e.g. in [[http://www.amazon.com/Diaspora-Greg-Egan/dp/0575082097][Diaspora]], so you'd need to come up with more ideas.

-If he doesn't, you've given yourself a bit of a problem. There's a tension between the point of the story (Beckham has to break out quickly) and the meta-point of the story (pointing out all of the inconsistencies in Star Trek). If you want to pursue the latter (which was the interesting part for me, and I thought was done really well--I love the idea of looking through the source code for the transporters/replicators), you might be better served by setting up a typical Groundhog Day-style loop where Beckham comes to learn more and more about the exploits in the situation (which gives you lots of room to add more Star Trek stuff) and eventually breaks out, ending the story. To get that to work you could change the retcon mechanism--instead of Beckham's mother wiping his memories, the whole simulation is simply rolled back to before its fictionality was revealed (but after the transporter accident, presumably). But then you'd have to sacrifice the whole original-humans-discriminating-against-software aspect, which is a pity.