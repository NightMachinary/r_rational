:PROPERTIES:
:Author: ShiranaiWakaranai
:Score: 2
:DateUnix: 1523065452.0
:DateShort: 2018-Apr-07
:END:

I'm not a physicist, but I think there's a "world is a simulation" type of answer to this problem:

Think of the world as a server, while every sentient being is a client. The state of the world is stored server-side, while the state of a sentient being's memory (experiences of reality) is stored client-side.

The world has infinite processing power, which it uses to construct an infinite timeline based on its near 100% accurate predictions of the future actions of every client. Each client only has access to one part of the timeline (the present), and uses data from the server to fill up its memories.

When a client time travels back to some time t, they are basically hacking. They are now exchanging data with a different part of the timeline than the server expects. Whenever that happens, the world detects the mismatch between client and server data as a time paradox and so it:

1. Destroys the timeline starting from the point of time paradox all the way to future infinity.
2. Rebuilds the infinite timeline with different random events happening.
3. Pushes data to the clients to rewrite all their memories to match the new timeline.
4. Checks if the new timeline still contains a time paradox: if so, restart from step 1.

Normally, this would just result in the act of time travel being erased. The odds of the new timeline still containing the time traveller's attempt to time travel are near zero, so the client just ends up having his memories overwritten and has no memory of attempting to time travel.

But some clients have memory protection. For example, your protagonist's client-side data is read-only: whenever the timeline is rebuilt, the world server can't overwrite her memories. So it has to keep destroying and rebuilding the timeline over and over again until it happens to construct a timeline that matches her memories. From the point of view of the protagonist, she only gets to see the final timeline that matches her memories, so as far as she can tell, time is immutable.

On the other hand, your antagonist's client-side data is private: whenever the timeline is rebuilt, the world server can neither overwrite nor read his memories. So it doesn't detect a paradox even when it constructs a timeline completely incompatible with your antagonist's memories. And doesn't overwrite his memories to match the new timeline. From the point of view of the antagonist, he has clearly changed the past, so time is mutable.

And in both cases, trillions are murdered over and over every time someone time travels.