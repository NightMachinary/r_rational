:PROPERTIES:
:Author: Dwood15
:Score: 14
:DateUnix: 1481565974.0
:DateShort: 2016-Dec-12
:END:

In an effort to be more productive and not have any more zero weeks (see: zero days), I'd like to start posting in the Monday General Rationality threads. As part of the contract, I'd like someone to pm me every so often on Mondays to remind me to post here. This will be in an effort to ensure at least some progress is being made on various projects. To that end, I have changed my password to my League of Legends account to a random impossible to remember string of characters to give me a barrier of entry before I lose my life to that game.

This will also be a way to report weekly going-ons of my various projects related to this community and such. Therefore, I think the Monday General Rationality threads are the best locations for these.

The reason I'm doing this is because this semester of school has been a complete disaster due to anxiety/depression, so I'm picking up some side projects to distract me and keep me from playing video games all day long. Enter !Pokemon, a project based on creating a rational game, per [[/u/ketura]] and their well-written paper on the subject. A rational game has a /lot/ of intricacies to it, so I'm going to be posting my thoughts on the subject.

While designing some underlying systems for this, we are attempting to create an engine which is as flexible as possible for modding while allowing for as much metagaming as possible at the same time. Whether or not it's fun will be up to playtesters and gamers to decide. There have been some debates on whether or not we could transition the game into a "Generic Monster Battler 2001!" or not, and there is definitely opportunity there. In which case, we would remove all pretenses of pokemon from it and make it based on monsters from classical folklore or another group if we can get appropriate licenses. This is also why the code I'm writing is in a private repository for now. Pokemon would still be a thing for the game, but through modding, as the game is heavily data-driven.

*Game architecture*

One major architectural decision of the game is to have a server which handles all of the game logic and then have a client which is essentially just the rendering system. It is going to be divorced from nearly all game state logic. This allows us to write our own rendering system, use Unity, or use Unreal or another engine to handle all front-end work, similar to some DF mods.

One major subsystem I have been spending a lot of time thinking about, is the gossip system - architecting a system that allows for both true and false factoids to be propagated and spread among the population. It's all going to be tied into the opinion system of the ai. Thus, one thing that I was worried about is a player spreading false gossip and having the ai automatically spread it around. Instead of mimicking real life as close as possible due to feature constraints, we're going to fake the spread of gossip by having a couple of barriers to entry. The first barrier would be the overall opinion of you. If the hivemind doesn't like you, they're going to be much less likely to let your opinion spread across the game population, say you go around and tell someone that Lt. Surge died fighting Moltres, which would be a lie. If your notoriety is high and most ai don't trust you, only those high-priority ai that have a high opinion of you would accept the factoid, but they would not be able to spread that rumor because it came from you and the hivemind doesn't trust you.

Along those lines, we've decided it's also going to be super costly in development time and in performance to attempt to simulate each and every ai all the time, so we're using a hivemind system to offset that. Only those ai who a modder specifies as high priority will be simulated all the time. This includes monster and human ai. For example, each of the 3 birds will be kept constant track of all the time. The Elite 4 and the current champion (if not the player) will as well, while anyone less important than them or not specified, will receive an 'abbreviated' simulation of sorts. This allows modders and I to not have to write so many ai handlers. Just one for the priority the ai receives.

As a side note, I think ketura has mentioned this, but all Legendaries will be receiving massive buffs. The E4, while powerful, are /not/ strong enough to take down a single legendary on their own. We haven't decided exactly how it is going to work, but the idea is that they are the people who divert them from the paths of cities so they don't destroy/cause major harm to these cities. The birds are effectively going to be living natural disasters in power level merely by existing and flying around as they choose.

There's more stuff I could share, but I'll keep that for next week. Let me know about your thoughts on this system.