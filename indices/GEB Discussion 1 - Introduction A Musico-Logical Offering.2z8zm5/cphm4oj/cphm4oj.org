:PROPERTIES:
:Author: 0v3rk1ll
:Score: 3
:DateUnix: 1426598181.0
:DateShort: 2015-Mar-17
:END:

Here is a bit of Haskell that generates the series from "Figure and Ground"

#+begin_example
  inverse xs = go xs [1..] 
                where go (x:xs) (y:ys) | x > y = y : go (x:xs) ys
                                       | x == y = go xs ys
                                       | otherwise = error "Ordering invariant violated"

  -- inverse evens == odds
  -- inverse fibonacci = [4, 6, 7, 9, 10, 11...]

  series = 1 : 3 : 7 : (drop 3 $ zipWith (+) series (inverse series))

  -- series == [1, 3, 7, 12, 18, 26...]
  -- inverse series == [2, 4, 5, 6, 8, 9, 10, 11...]
  -- series == Figure??
  -- inverse series == Ground??
#+end_example