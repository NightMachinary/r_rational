:PROPERTIES:
:Author: munkeegutz
:Score: 3
:DateUnix: 1530992561.0
:DateShort: 2018-Jul-08
:END:

Usually for cryptography, we call the two users Alice and Bob, but in this scenario, I think I'll call them Val and Joon...just random names I came up with ;-)

I think that a key exchange is overkill -- the reason we use key exchange in modern society is that you want your computer to talk to Amazon, but you don't have any safe way to get Amazon information in the first place, and Amazon can't get you secure information. Sending that first piece -- the cryptographic key -- securely is the emphasis of key exchange. In this case, that table that Val and Joon arranged fills this need. All they need to do is agree on an algorithm which makes cracking this hidden key impractical for an attacker.

If we were dealing with a computer, I would be worried about cryptographic strength. In this case I'm going to assume the following:

- Both the users and attacker have access to pen-and-paper math but no sophisticated computing devices. The attacker has, say, 100 people working under him (so more resources than the users) though
- The attacker is content with trying to learn what was said after-the-fact. Otherwise, the encryption becomes trivial, but as soon as it becomes clear that the attacker cannot follow the communication, he would shut down the channel
- They can't see each other's work
- The table is known to Joon and Val, not to the attacker, and is of useful length, but substantially shorter than the content of their communication

Even in this scenario, the encryption is pretty trivial. As Joern314 said, a one-time pad is an easy and effective tool.

Treat the table of numbers as an ordered list (from lowest table index to highest). Take each triplet of numbers (each in base-3) and encode them together -- now each grouping of numbers encodes one of 27 values -- enough for the 26 letters plus a space!

Your table is a third as long now, but each letter can be mapped to any other letter -- treat it like a Caesar Cipher, but with a rolling code.

If you made the total length of your communication no longer than the one-time-pad, then you would have a truly unbreakable code. As you get longer messages, this technique becomes imperfect -- you could guess the *length* of the cipher after the message is several times the length of the cipher, after which you would be able to start collecting statistical information about the message. But all of that is pretty computationally intensive and probably beyond the means of a bunch of humans in the five years before the world ends.

With a reasonable-length pad (say, 60 base-3 digits or 20 letters long), you would probably be fine (because Intel does not exist in Worth the Candle)

There are systems which are harder to crack than what I described, but that one works with pen and paper

[[https://en.wikipedia.org/wiki/Caesar_cipher]]

If you are patient and want an even simpler system, just write down a bunch of false (or irrelevant statements), each of which is a sentence long, and then match the true one with correct answers to the table.