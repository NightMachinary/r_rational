:PROPERTIES:
:Author: CCC_037
:Score: 3
:DateUnix: 1521290800.0
:DateShort: 2018-Mar-17
:END:

The first rule of optimisation - do your calculations /outside/ the loop, as much as possible. If you're repeating a calculation a million times, then make the art that you repeat /as small as possible/. (An example of a small calculation for collision detection - is the difference in X-coordinate between A and B less than the size of the largest object in your map? If not, they are not colliding, move on to the next one, don't even bother looking more closely than that one-subtraction-and-comparison).

The second rule of optimisation - don't be afraid to use lookup tables for common calculations.

The third rule of optimisation - use a profiling tool (gprof is good) to see /exactly/ where your code is spending all its time. You don't want to spend six weeks tightening up Function A only to find out that the real bottleneck is Function B.