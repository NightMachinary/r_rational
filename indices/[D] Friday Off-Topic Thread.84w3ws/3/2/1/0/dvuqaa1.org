:PROPERTIES:
:Author: Amonwilde
:Score: 2
:DateUnix: 1521305973.0
:DateShort: 2018-Mar-17
:END:

I made this point in my previous response to you, but it clearly missed the mark. This tutorial is not for advanced programmers. This is an attempt to explain these concepts in ways that are at least mildly comprehensible. Because nowhere in your feedback do you wrangle with any of the problems of explaining these concepts to new programmers, I have to assume you've put little or no thought into those problems. How many new programmers have you brought up? Where is your teaching on these subjects? Not to say that your feedback couldn't be useful without having created your own materials, but you're not engaging with the essential task.

There is, generally, a dearth of good teaching material on programming for people who aren't aneruotypical autodidacts. (Basically, the people in this sub.) Yes, you probably learned programming by creating a Turing machine from first principles with an abacus that someone carelessly left on a table. But that's not how people within a standard deviation of baseline learn programming. Frankly, this type of feedback is why most writing for beginners on programming is bad pedagogy or basically reads like docs. If you leave something out because your audience doesn't need to know it at that point, someone comes out of the woodwork and says, "functions are state!" or whatever. Yeah, no shit, they're stored in memory. What we're talking about is mutable state, but if I start using that term at that point, I might as well not be writing the tutorial because no one at the level I'm addressing will be able to describe it, and, not only that, but will be put off and discouraged.

In any case, I don't want to undervalue your experience. You may know more than me, though some of your assumptions about my level of knowledge that you've made based on a specifically pedagogical article are mostly wrong and make it difficult to engage in a meaningful and non-defensive back-and-forth. But it's also clear to me that you haven't taught any of these topics, and if you've tried, you've probably left people behind after the first sentence and not realized it. That's fine, I guess, and programmers have a tendency in this direction that you can see in the general level of rudeness and condescension on, for example, Stack Overflow. ButI do ask that, for those of us who actually care about new programmers and their learning, that you not actively belittle our efforts.