:PROPERTIES:
:Author: sickening_sprawl
:Score: 2
:DateUnix: 1543218614.0
:DateShort: 2018-Nov-26
:END:

Wikipedia only cites that piece I linked, which isn't nearly an actual proof. There's [[https://arxiv.org/abs/gr-qc/0209061][this]] which is a (pretty lame) attempt at formalizing it a bit more, and extends it to NP-complete and PSPACE. It allows for solving of problems where checking the solution is also intractable with limited length closed time-like curves, which sounds like it would work for AGI plans.

The complexity doesn't matter much, because the AGI can send a copy of itself into an orphan timeline and optimize for it's own value function, with time machine chains bypassing the range limit and orphan timelines eating the energy cost for the travel itself. The reified timeline is one that the AGI receives a plan, executes the plan, and sends the same plan back - even if how it originally got the plan in the orphaned timeline was via an entirely different plan that required time machine chains.

I'll admit that I'm not a fan of solving NP-hard problems with timelike curves, simply because it seems trivial that they would give wrong answers due to an improbable glitch. It sounds more common that you get the prime factors "3,5" and your program messes up, transmitting "3,5" as a fixpoint even if it's incorrect than it running without glitches for 10^{n} iterations.