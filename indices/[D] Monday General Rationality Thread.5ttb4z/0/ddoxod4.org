:PROPERTIES:
:Author: captainNematode
:Score: 9
:DateUnix: 1487003788.0
:DateShort: 2017-Feb-13
:END:

I /finally/ finished watching Gilbert Strang's [[https://www.youtube.com/playlist?list=PLE7DDD91010BC51F8][series of lectures on linear algebra]] (MIT 18.06) on YouTube. Took me a little over half a year lol. There were only 35 of them and each was only ~50min long, but each required around 1.5-2h for me to get through since I liked to pause every time he asked a question or did an example in order to work through the problem first myself (and occasionally consult notes from earlier chapters). And then I ended up restarting at one point after making it through half of them, since I took a long break (QE preparations and cross-country move) and felt a little foggy on some of the earlier material.

But anyway, they were great! He didn't go into as much depth on some things as I'd wanted and sometimes glossed over seemingly important points (e.g. he spent a good bit of time on the [[https://en.wikipedia.org/wiki/Fast_Fourier_transform][Fast Fourier transform]] but didn't really say why, other than that it was really important, until returning to the topic a few lectures later). Occasionally he'd make simple mistakes but I think I caught most of them (and usually someone else did too, after consulting the YouTube comments).

So yeah, if you're looking for a nice, gentle introduction to linear algebra (which forms the foundation of SO MUCH applied mathematics, e.g. computational statistics), I'd definitely recommend Strang. He's a great lecturer: quite clear and insightful and a pleasure to listen to (though I did speed up the video ~1.3x, since he talks a little slowly). I mean to take his Computational Science and Engineering and Differential Equations and Linear Algebra courses next, and then also maybe Klein's [[https://cs.brown.edu/video/channels/coding-matrix-fall-2014/][Coding the Matrix]], which has a bit more hands-on implementation (in Python).