:PROPERTIES:
:Author: thekevjames
:Score: 3
:DateUnix: 1535782079.0
:DateShort: 2018-Sep-01
:END:

Depends what sort of data-science he wants to be doing. There's a lot of different sub-fields within datascience that have their own toolkits. My teams' datascientists mostly focus on NLP (natural language processing) results and do so anywhere from fairly bog-standard heuristic methods up to LSTMs and CNNs (the oh-so-prevalent "deep learning" buzz words...). They work in Python, which is pretty standard for anyone in the industry working on /products/ rather than /research/.

As a general rule, an entry level position on the team requires: - a basic understanding of Python, just enough to glue libraries together and insert your math - a rough understanding of one or two of the "glue" libraries: (numpy, pandas, scipy/scikit-learn) - a medium understanding of one of the more in-depth do-your-job libraries, for those interested in deep learning rather than heuristics: (tensorflow, pytorch, keras, gensim, nltk maybe)

Nice to haves (datascience perspective -- ie. "I want to get hired and the folks interviewing me are datascientists"): - lots of datascience work (not just my company, more generally) uses Jupyter notebooks, so an understanding of that - data collection, cleaning, etc. Search term: "corpus cleaning" - corollary: knowledge of parsing large datasets ("corpus"es) - the pure math background will probably be fairly impressive here, any works from that will be relevant - data visualization -- even as simple as being able to visualize a dataset in something like matplotlib can be helpful here

Nice to haves (engineering perspective -- ie. "Oh no, there are engineerings involved in this hiring process too!"): - more than just a basic understanding of Python. Engineers tend to find that datascientists undervalue how much they need to use this skill - understanding of runtime and memory usage concerns, ie. "will the models this datascientist produces actually be able to be used, or will they often be too slow/too bloated/etc" - ability to test models, especially in an automated fashion. Any sort of mention of testing for things like recall/precision being more than an ad-hoc manual task - knowledge of parsing large datasets /using real-world tools/. Datascientists will be happy here to see "I can work with a 5GB Excel file", engineers will be more interested in "I have an understanding of SQL syntax and know how to work with it".

Depending on company, the average job will sway between the two datascience vs engineering extremes listed above. If he wants to live in the research world, come up with cool things, and hand them off, focus a bit more on the datascience asks. If he wants to bring features from conception to product, work in smaller companies with less engineering support, etc, focus a bit more on the engineering asks.