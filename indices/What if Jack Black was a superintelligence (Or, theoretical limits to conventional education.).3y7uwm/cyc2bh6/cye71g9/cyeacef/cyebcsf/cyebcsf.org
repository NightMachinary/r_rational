:PROPERTIES:
:Author: derefr
:Score: 2
:DateUnix: 1451344733.0
:DateShort: 2015-Dec-29
:END:

#+begin_quote
  Or that a teacher and software developer work VERY CLOSELY with maximizing the really short reinforcement loop and longer term reinforcement loop on all of the topics involved.
#+end_quote

I've been thinking about "adaptation" as a method of creative expression lately.

For example, "screenplays" as a concept (i.e. sparse writing that doesn't communicate a vision, used basically as feedstock for a director to play with and override and "dress" in detail) seem to be increasingly outmoded. We instead see many of the biggest successes in movie-making coming from adaptations of other /visual/ media (e.g. Marvel comics) where not just the story, but that particular /telling/ of the story has been pre-validated by an audience, and the director's influence in re-shaping the story is diminished.

It's not hard to imagine that, to compete, screenplay writers would switch to something more like machinima production: all the same lines, but now with choreography (timing, expression, movement, body-language) and cinematography (movement of camera, lighting, cuts) built into the "script", and /without/ the need to become proficient visual artists themselves. Basically, instead of outlining a movie, they'd be /prototyping/ a movie, assuming far more of the directorial role themselves, making any resulting movie-adaptation much more an expression of their own vision.

I can see this same concept applying to educational game design: instead of having the teacher and the developer in the same body, or in the same room, you could just empower teachers (through education /and/ software) to do game /prototyping/---not even necessarily of software-based games---and then their detailed prototypes could be /adapted into/ polished software by developers, who can treat them as a very solid-and-clear fixed spec.