:PROPERTIES:
:Author: Nighzmarquls
:Score: 1
:DateUnix: 1451346935.0
:DateShort: 2015-Dec-29
:END:

Lovely sentiment, sadly most teachers seem dis-inclined to put in any extra work on these things. Their already overloaded and in the states grossly under paid.

On the screenplay side of things I'm a bit dubious of the impression your getting, a script is still written for most visual media, For example the Sandman comics have copies of the scripts written for them, then an artist makes progressive interpretations and composition.

I do something almost but not quite like comic production and I generally start with a rough script because it's so much cheaper in effort to produce and can be altered more fluidly then a finished visual piece.

Movie prototyping as you describe is already a major part of a lot of productions, especially animated works. This is called storyboarding and generally accepted as one of the stages of pre-production. It is pretty low impact still which is essentially the point of prototypes. In this analogy a script is a proposal of design, a storyboard is a prototype.

Machinima is probably a step up from storyboarding in skillset required so at best I could see it either as a stand in for storyboarding and at worst a second stage movie prototype often called an animatic (these were used rather extensively in LOTR for several shots where 3D models were moved with very little animation to find the ideal angles for things).

So not to reign in on your initial premise but ya most studios already are using all of that and it has not caused the dissolving of the script as a tool. I suppose in an ideal world some super tool would be nice. It is a good idea, but tool development is by no means a 'simple' endeavor and neither is it necessarily all that 'new' a problem space to be tackling.

For game dev, I've seen a lot of tools for game production that 'simplifies' access, and ultimately I'm not terribly impressed with any of the results that have been attempted. It's one of the tools we use to teach kids programming but ultimately the flexibility a teacher needs is still at present looking about as broad as any mature dev language.

Which gets us all the way back to the original problem. Which ultimately is a problem for a reason. These are skill sets that are very precisely honed and to replace the person in either half of the equation means distilling a lot of skills and capabilities down into some kind of specialist tool. Doing that without either simplifying the capabilities of the tool to the point of uselessness or effectively creating an entirely new profession of specialist in the mix is edging into a lot of Artificial intelligence territory.

Which we are ALSO getting into as well but comes with some of it's own challenges I'd expect most readers of this subreddit to be aware of.