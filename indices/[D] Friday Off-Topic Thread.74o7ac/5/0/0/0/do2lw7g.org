:PROPERTIES:
:Author: eternal-potato
:Score: 3
:DateUnix: 1507460402.0
:DateShort: 2017-Oct-08
:END:

[[https://www.greenend.org.uk/rjk/misc/nipple.html][The only "intuitive" interface is the nipple. After that it's all learned.]] Other than that, this is a slippery slope. Familiarity breeds contempt here. Once you use a technology enough, its deficiencies become apparent to you. So you set off to make a better thing, and in the process familiarize yourself with technologies used to make it and recognize their deficiencies in turn. Game asset editors -> Game engines -> Software libraries -> Programming languages -> OS APIs -> OS internals -> Hardware architectures -> and so on down to underlying physics. This chain (DAG, really) generally gets harder the deeper you go. As it is infeasable improve everything, you have to choose some point at which to stop. So you might as well save yourself the effort and just deal with the imperfections of your tools and focus on making the actual thing you want to make, i.e. the game itself (assuming that is what you want to make, if your goal is to make a game engine with associated tooling from scratch for educational purposes or just for fun that is fine), otherwise you are likely to stretch yourself too thin and fail to produce anything.