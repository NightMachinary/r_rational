:PROPERTIES:
:Author: Norseman2
:Score: 3
:DateUnix: 1580447608.0
:DateShort: 2020-Jan-31
:END:

This seems like it's potentially a waste of time to attempt. When you're talking about transmission times of hundreds of years at best, it would be millions of years before we could understand each other. Instead, I think it's better to basically send several massive packages of information and let them sort it out on their end. Transmitting a binary representation of any sufficiently long sample of language in ASCII format (like sending tens of thousands of uncompressed non-fiction books without pictures) would be immensely informative, and would be clearly distinct from any possible natural phenomenon.

A data stream like that using a completely alien language would provide a lot of room for useful analysis. If we received such a message, we'd have no idea what anything in it is supposed to look like (text-wise), but we could begin using statistical analysis to see which things are common, which things commonly (or always) follow other things, which short sequences occur very regularly (typically used for chunking, like with our spaces, tabs, and new lines) and even start working out their "spelling" and grammar based on how certain groups always appear before or after certain other groups. Even without knowing the meaning, we could work out similarity in meaning based on seeing the same "words" being used interchangeably, or being frequently used in the same context as other "words." You've provided the dump of data to be decrypted, and now everything else you send is context to try to crack the code.

With that analysis ongoing, you could then try to tie in meaning to the things you're sending. You could send a sequence of prime numbers (in ASCII format), the Fibonacci sequence, and various other sequences, first in binary but then in ASCII format again. Sending them in the same linguistic format provides the beginning of meaning for the ASCII data. Once numbers are understood in that format, the same sequences could be sent as words. Mathematical formulae and their inputs/outputs could be sent the same way. You've now provided the basis for understanding anything math-related in the database you provided, and for mathmatical operators, most importantly "=". This can allow you to help with redundancies, e.g. by saying " ft. = feet m = meters 1 meter = 3.2808 feet". This doesn't tell them what feet or meters are, but it does tell them that numbers expressed with those units can be converted into the other units, so they can start to narrow down the complexity of the text you sent them.

Mathematical units are where you really get into some deep understanding. Dimensional analysis by looking at certain powers of units for unknown mathematical and physical constants would, with enough constants being defined and related to each other, allow those units to be understood. Now every measurement in your texts can be understood and related to those universally-understood constants.

From there, specifying things like distance from the galactic center or distance from the sun would allow them to understand "galactic center" and "sun", assuming they've already made those measurements for themselves. Continuing like this would quickly begin to provide the information needed to crack the code you initially provided.

The last key part is pictures. To start off, you might send messages on various frequencies and say, in ASCII, what frequency of light the message is sent on. Once they get this, you can express most colors as a frequency of light. Next, send stronger and slightly weaker signals, saying in ASCII the amplitude of the signal. Now they get amplitude.

Next would be to learn rasterization. If you repeatedly sent ASCII-coded "Picture: X" followed by a multiple of primes-sized 1-bit grayscale rasterizations of images of various subjects, followed by "Description: X" to describe what is shown, it's fairly likely that they'd recognize the change in data type with the images, eventually attempt to rasterize the unusual data at some point, and be greeted by unmistakeable symbols. For example, you might start with a triangle or a circle, along with various other mathematically-important two-dimensional shapes. With pictures understood, you can start to show grayscale rasterizations of the various nouns used in your texts, and descriptions of those nouns to help tie meaning to the words you sent previously.

You could then say something like "Frequency picture of X:" and then "Frequency + amplitude picture of X" and have your ASCII-described frequencies and amplitudes used to provide colored images, with the same descriptions you sent previously with the grayscale rasterizations. After that, you might have "Three frequency + amplitude picture" and send a picture which would provide the full range of colors we're used to. After that, you can start to describe verbs by showing sequences of pictures. "A person running, 0.01 seconds:", "A person running, 0.02 seconds", etc. You could also describe colors and other visually-obvious adjectives, and demonstrate adverbs as well as most prepositions with this approach. That's pretty much all you'd need to get the language, culture, and basic understanding of humanity. The rest of the initial data dump provides a lot of context clues to help fill in some of the gaps.

Altogether, this might only take a few years to send everything, and it would provide decent odds that you can understand their reply in a few hundred years when it finally gets to you.