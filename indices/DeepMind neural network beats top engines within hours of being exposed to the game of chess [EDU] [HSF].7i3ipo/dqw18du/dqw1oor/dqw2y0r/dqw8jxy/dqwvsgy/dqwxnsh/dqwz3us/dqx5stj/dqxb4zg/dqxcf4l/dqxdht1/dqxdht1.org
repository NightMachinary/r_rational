:PROPERTIES:
:Author: monkyyy0
:Score: 1
:DateUnix: 1512691608.0
:DateShort: 2017-Dec-08
:END:

#+begin_quote

  #+begin_quote
    There is also ackermann function if you want an impossible problem.
  #+end_quote

  Predicting every legal chess move is impossible for today's computers, too, but apparently neural nets can still do a good job of calculating a strategy. If there is a real-world problem involving the Ackermann function, perhaps a similar approach would likewise produce a reasonable (if theoretically non-optimal) solution? Would need a concrete example to evaluate this.
#+end_quote

Not What I mean

Ackermann function/factorial, could not be correct with a neural net as a platform; while a correct solution, if impractical exist elsewhere trivially. The hype around neural nets as the general solution is wrong

#+begin_quote
  this approach produced a more general engine capable of significantly better strategy than previous specialised engines, in multiple games.
#+end_quote

Its not that general; I'm suggesting a heaping spoonful of pessimism needs to be part of this conversation; add some caveats.

#+begin_quote
  The stated limitation of min-max trees was inability to adapt to challenges outside their training space
#+end_quote

That's not a limitation of min-max trees; they are a perfect solution; their limitation is computation complexity.