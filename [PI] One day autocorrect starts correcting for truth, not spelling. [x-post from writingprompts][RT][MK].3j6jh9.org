#+TITLE: [PI] One day autocorrect starts correcting for truth, not spelling. [x-post from writingprompts][RT][MK]

* [PI] One day autocorrect starts correcting for truth, not spelling. [x-post from writingprompts][RT][MK]
:PROPERTIES:
:Author: GaBeRockKing
:Score: 62
:DateUnix: 1441083304.0
:END:
Here's my response to a prompt I saw. I thought it fit here :)

~~~~~

I had noticed something... particular, this morning.

"I'll be there by nne thirty."

The text blinked.

"I'll be there by ten thirty."

I laughed a little, assuming the autocorrect was bugging out. I tried again.

"I'll try and come over by nine-thirty."

This was sent perfectly, and I forgot entirely about the incident.

That is, until I got delayed by traffic, and arrived twenty minutes late.

No big deal; it was probably just a coincidence.

Me and the guys boozed it up some, and spent the afternoon watching football on TV.

My phone buzzed.

"Hey, Tim, are you getting those groceries like I asked you?"

It was my girlfriend.

I deliberated, but determined that if I lied, then dropped by the walmart on the way home, she'd be none the wiser.

Not even looking at the screen, I just typed in "yeah."

Not even a minute later, the phone buzzed again.

"Then get off your ass and go!"

I checked my phone. Sure enough, the autocorrect had changed the "yeah" to a "no."

It was bizarre, but hey-- there were plenty of non-mystical explanation. Bugs happened.

I blinked, remembering the incident earlier today.

Actually, maybe bugs weren't to blame. What if my phone had some sort of lie detector built in, that had just activated now? Doubtlessly, there was some way to check my physical condition when my finger was on the touchscreen, so maybe the phone worked like a polygraph.

I decided to test my hypothesis.

"The sky is green" changed to "the sky is blue."

"Anchovies are delicious" changed to "Anchovies are abhorrent."

"The president is a lizard person," bizarrely, stayed the same.

I frowned, and felt a little uneasy.

"The 22nd number in pi is even."

No change. I checked the internet, and it confirmed my statement.

"The next two coin flips I make will be heads and then tails and then tails and then heads" changed to "tails and then tails and then tails and then tails."

I flipped a coin four times. All four were tails.

By now, my stomach was doing flip flops. I considered carefully what statement to make next.

"The entirety of useful knowledge conveyed in english sentences, encoded in binary as ASCII code, ranked from most to least important, in pi, starts on the 1st digit."

The text blinked.

"Don't push your luck, buster."


** #+begin_quote
  "The president is a lizard person," bizarrely, stayed the same.
#+end_quote

Heh.
:PROPERTIES:
:Author: MugaSofer
:Score: 21
:DateUnix: 1441108528.0
:END:

*** Obama does like lizards. I'm more of a cat person, myself.
:PROPERTIES:
:Score: 14
:DateUnix: 1441131056.0
:END:


** #+begin_quote
  "Don't push your luck, buster."
#+end_quote

Aw.
:PROPERTIES:
:Author: Rhamni
:Score: 9
:DateUnix: 1441118925.0
:END:


** "The reason Jon Jafari left the Game Grumps was to work on JonTron."

:P

#+begin_quote
  That is, until I got delayed by traffic, and arrived twenty minutes late.
#+end_quote

Not an hour?
:PROPERTIES:
:Author: Transfuturist
:Score: 6
:DateUnix: 1441122674.0
:END:

*** he arrived by ten. I'm not going to give an explicit definition of how this all worked, as that's beyond the scope of a short writingprompt's snip, but it was a short easy change that made the statement true, without adding any words.
:PROPERTIES:
:Author: GaBeRockKing
:Score: 3
:DateUnix: 1441126637.0
:END:


** "The lottery numbers tonight will be 1,2,3,4,5,6."
:PROPERTIES:
:Author: Geminii27
:Score: 3
:DateUnix: 1441127466.0
:END:

*** "The lottery numbers tonight will not be 1,2,3,4,5,6."
:PROPERTIES:
:Author: blazinghand
:Score: 8
:DateUnix: 1441139134.0
:END:

**** "The lottery numbers drawn tonight will include the number 1."

(repeat with each number, noting the entries which do not change)
:PROPERTIES:
:Author: Geminii27
:Score: 2
:DateUnix: 1441139361.0
:END:

***** Then follow up with positioning questions, I assume?
:PROPERTIES:
:Author: Kishoto
:Score: 1
:DateUnix: 1441163255.0
:END:

****** Depends on the specific lottery format, I guess. Some need positioning, some don't. Shouldn't be too hard to narrow it down over the course of a minute or two.

Then go buy ten tickets with those numbers. Even if ten other people guess them randomly, you still win half the big prize.
:PROPERTIES:
:Author: Geminii27
:Score: 1
:DateUnix: 1441181387.0
:END:


**** #+begin_quote
  If you look at the previous questions, the autocorrect only changes one word to another one. Of course, the last sentence implies that it has agency beyond that, but the MC didn't know that.
#+end_quote

something I posted elsewhere in the thread.
:PROPERTIES:
:Author: GaBeRockKing
:Score: 1
:DateUnix: 1441143018.0
:END:


** #+begin_quote
  "The entirety of useful knowledge conveyed in english sentences, encoded in binary as ASCII code, ranked from most to least important, in pi, starts on the 1st digit."

  in pi
#+end_quote

What is this clause doing?
:PROPERTIES:
:Author: Lugnut1206
:Score: 2
:DateUnix: 1441098188.0
:END:

*** Pi, as an irrational number, contains all possible combinations of numbers (does it?). At some point in its sequence, if you started decoding to ASCII, you'd find sentences. On what digit? That's what he's trying to find.
:PROPERTIES:
:Author: eltegid
:Score: 7
:DateUnix: 1441098611.0
:END:

**** I don't think it's proved that all possible combinations of digits will appear in any expansion of Pi.

There is certainly not enough room to fit the answer on the phone's screen, and possibly not enough room to fit the answer in the phone's memory.
:PROPERTIES:
:Author: ArgentStonecutter
:Score: 13
:DateUnix: 1441103428.0
:END:

***** But the answer to that question is just the position of where that question is, if it does appear. It may or may not fit in the screen
:PROPERTIES:
:Author: eltegid
:Score: 7
:DateUnix: 1441104571.0
:END:

****** Statistically, it probably takes about as many digits to locate that sequence as the sequence contains. It may take more. For example, the string "123" is three digits long, bit it takes four digits to index the first occurrence of "123" in pi.
:PROPERTIES:
:Author: ArgentStonecutter
:Score: 9
:DateUnix: 1441105672.0
:END:


****** To elaborate, consider the following data compression scheme. To simplify things, let's pretend we're compressing strings of decimal digits... the same logic generalizes to ASCII, BAUDOT, Hollerith code, EBCDIC, or Radix-50.

To compress: replace each sequence of characters with the tuple {n,X}, where n is the number of characters encoded, and X is the location of the start of the sequence in the decimal expansion of pi.

Is there any value n for which this would not make the message longer? I don't have a proof here, but it seems that larger values of n would have increasingly worse expansions. Even leaving the "n" out of the "encoded text" wouldn't help much.
:PROPERTIES:
:Author: ArgentStonecutter
:Score: 5
:DateUnix: 1441116844.0
:END:

******* There are obviously some pairs {n,X} where this encoding is good. Trivially, sending the first n digits of pi is very efficient :)

However as a general encoding I expect this is inefficient. Consider: compression works by a tradeoff; messages of a particular type can fit in a small amount of data, but messages not fitting that type take more data than raw information. You cannot transmit more than a bit of information per bit of data on average, but you can change how much information particular messages take, paying it off by making representations of other messages more lengthy (with hopes that the other messages are never going to be sent).

This is why random data is not compressible, by the way: because there's no pattern to the messages, you cannot 'shift' the data cost in any meaningful way - you're just as likely to hit the messages you made cheaper as the ones you made more expensive.

It's reasonable to assume index within pi as a compression algorithm doesn't optimise for human messages; it doesn't shift the data cost from messages we're likely to send to ones we aren't. I'm pretty sure you could prove this formally but this comment is too small to contain it. As such, you expect the representation of the average message to be longer than the actual message.
:PROPERTIES:
:Author: Anderkent
:Score: 4
:DateUnix: 1441123189.0
:END:


***** That's among the possible reasons for the last response.
:PROPERTIES:
:Author: GaBeRockKing
:Score: 1
:DateUnix: 1441115252.0
:END:


**** It isn't a given that it corrects the /position/, it could make many changes to the sentence that would make it true:

ASCII -> some other code

english -> some other ascii language

pi -> some other irrational number that may not even be computable

So the autoveritas(is that a good name?) could pretty much always deflect certain corrections.
:PROPERTIES:
:Author: Dykster
:Score: 8
:DateUnix: 1441105611.0
:END:

***** Or it could simply insert a negation.
:PROPERTIES:
:Author: ArgentStonecutter
:Score: 3
:DateUnix: 1441116338.0
:END:

****** If you look at the previous questions, the autocorrect only changes one word to another one. Of course, the last sentence implies that it has agency beyond that, but the MC didn't know that.
:PROPERTIES:
:Author: GaBeRockKing
:Score: 1
:DateUnix: 1441142977.0
:END:

******* "on" could change to "after".
:PROPERTIES:
:Author: ArgentStonecutter
:Score: 1
:DateUnix: 1441143196.0
:END:

******** yep, that would have worked. MC was spitballing at that point, though. Given more time to think things through, a more elegant solution could be found, but it was really all just setup for the oneliner :P
:PROPERTIES:
:Author: GaBeRockKing
:Score: 1
:DateUnix: 1441143363.0
:END:


**** #+begin_quote
  Pi, as an irrational number, contains all possible combinations of numbers (does it?).
#+end_quote

This is not yet known. Irrational numbers are ones which never terminate and never repeat. But this does not mean they contain all possible combinations. The number .1101001000100001000001... doesn't terminate and doesn't repeat, but it also doesn't contain a 3. So 103 isn't a string you'll ever find there.
:PROPERTIES:
:Score: 5
:DateUnix: 1441131224.0
:END:

***** Why not? If it doesn't repeat, you can't know if there's going to be a three thousands of digits in.
:PROPERTIES:
:Author: iamthelol1
:Score: 1
:DateUnix: 1441939935.0
:END:

****** Yes, you can. There isn't.
:PROPERTIES:
:Score: 1
:DateUnix: 1441945861.0
:END:


**** #+begin_quote
  Pi, as an irrational number, contains all possible combinations of numbers (does it?).
#+end_quote

Even if it did (which is not known, and certainly doesn't follow from it being irrational), the digit it starts at would almost certainly be far past what we'll ever compute.
:PROPERTIES:
:Author: jesyspa
:Score: 1
:DateUnix: 1441458744.0
:END:


** #+begin_quote
  "The entirety of useful knowledge conveyed in english sentences, encoded in binary as ASCII code, ranked from most to least important, in pi, starts on the 1st digit."
#+end_quote

The number necessary to make that correct is the same length as the number you're looking for. You can't just compress something by finding where in pi it starts.
:PROPERTIES:
:Author: DCarrier
:Score: 2
:DateUnix: 1441136556.0
:END:

*** copy/paste man. ;) But in all seriousness, I gave the character roughly the same time to think as I did, so he's just spitballing. Finding an easy way to get all useful knowledge was something I thought up, and while this specific way doesn't quite work, it's enough to convey to the reader what he wants to do, while also setting up the punchline to the story.
:PROPERTIES:
:Author: GaBeRockKing
:Score: 2
:DateUnix: 1441137473.0
:END:

**** It's not as if he only gets one try.
:PROPERTIES:
:Author: Chronophilia
:Score: 1
:DateUnix: 1441153142.0
:END:
